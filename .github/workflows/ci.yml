name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build shared package
        run: npm run build --workspace=@ai-jupyter/shared
      
      - name: Run frontend tests
        run: npm run test --workspace=@ai-jupyter/frontend
      
      - name: Run frontend linting
        run: npm run lint --workspace=@ai-jupyter/frontend
      
      - name: Type check frontend
        run: npm run type-check --workspace=@ai-jupyter/frontend

  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ai_jupyter_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          cd apps/backend
          pip install -r requirements.txt
      
      - name: Run backend tests
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/ai_jupyter_test
          REDIS_URL: redis://localhost:6379
        run: |
          cd apps/backend
          pytest
      
      - name: Run backend linting
        run: |
          cd apps/backend
          flake8 .
          black --check .
      
      - name: Type check backend
        run: |
          cd apps/backend
          mypy .

  build:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build all packages
        run: npm run build